{"id":"src\\btn.vue","dependencies":[{"name":"E:\\git\\vue-ratchet\\package.json","includedInParent":true,"mtime":1533795079661},{"name":"./badge.vue","loc":{"line":11,"column":18},"parent":"E:\\git\\vue-ratchet\\src\\btn.vue","resolved":"E:\\git\\vue-ratchet\\src\\badge.vue"},{"name":"./icon.vue","loc":{"line":12,"column":17},"parent":"E:\\git\\vue-ratchet\\src\\btn.vue","resolved":"E:\\git\\vue-ratchet\\src\\icon.vue"},{"name":"E:/git/vue-ratchet/src/scss/mixins.scss","includedInParent":true,"mtime":1532511610697},{"name":"E:/git/vue-ratchet/src/scss/phone.scss","includedInParent":true,"mtime":1532511610699},{"name":"E:/git/vue-ratchet/src/scss/variables.scss","includedInParent":true,"mtime":1532511610701},{"name":"_css_loader","parent":"E:\\git\\vue-ratchet\\src\\btn.vue","resolved":"D:\\Users\\sfliu\\AppData\\Local\\Yarn\\Data\\global\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"},{"name":"vue-hot-reload-api","parent":"E:\\git\\vue-ratchet\\src\\btn.vue","resolved":"E:\\git\\vue-ratchet\\node_modules\\vue-hot-reload-api\\dist\\index.js"},{"name":"vue","parent":"E:\\git\\vue-ratchet\\src\\btn.vue","resolved":"E:\\git\\vue-ratchet\\node_modules\\vue\\dist\\vue.runtime.esm.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _badge = require('./badge.vue');\n\nvar _badge2 = _interopRequireDefault(_badge);\n\nvar _icon = require('./icon.vue');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexports.default = {\n    name: 'btn',\n    components: {\n        icon: _icon2.default,\n        badge: _badge2.default\n    },\n    props: {\n        text: String,\n        classes: String,\n        color: {\n            type: String,\n            default: '' //primary, positive, negative, link\n        },\n        outlined: String, //undefined| or not\n        block: String, //undefined| or not\n        icon: false,\n        badge: void 0\n    }\n};\n        var $89fb86 = exports.default || module.exports;\n      \n      if (typeof $89fb86 === 'function') {\n        $89fb86 = $89fb86.options;\n      }\n    \n        /* template */\n        Object.assign($89fb86, (function () {\n          var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"button\",\n    {\n      staticClass: \"btn\",\n      class: [\n        _vm.color ? \"btn-\" + _vm.color : \"\",\n        _vm.outlined !== void 0 ? \"btn-outlined\" : \"\",\n        _vm.block !== void 0 ? \"btn-block\" : \"\",\n        _vm.classes ? _vm.classes : \"\"\n      ]\n    },\n    [\n      _vm.icon ? _c(\"icon\", { attrs: { icon: _vm.icon } }) : _vm._e(),\n      _vm._v(\" \"),\n      _vm._t(\"default\", [_vm._v(_vm._s(_vm.text))]),\n      _vm._v(\" \"),\n      _vm._t(\"content\"),\n      _vm._v(\" \"),\n      _vm.badge !== void 0\n        ? _c(\n            \"badge\",\n            { attrs: { inverted: _vm.outlined !== void 0, color: _vm.color } },\n            [_vm._v(_vm._s(_vm.badge))]\n          )\n        : _vm._e()\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n          return {\n            render: render,\n            staticRenderFns: staticRenderFns,\n            _compiled: true,\n            _scopeId: null,\n            functional: undefined\n          };\n        })());\n      \n    /* hot reload */\n    (function () {\n      if (module.hot) {\n        var api = require('vue-hot-reload-api');\n        api.install(require('vue'));\n        if (api.compatible) {\n          module.hot.accept();\n          if (!module.hot.data) {\n            api.createRecord('$89fb86', $89fb86);\n          } else {\n            api.reload('$89fb86', $89fb86);\n          }\n        }\n\n        \n        var reloadCSS = require('_css_loader');\n        module.hot.dispose(reloadCSS);\n        module.hot.accept(reloadCSS);\n      \n      }\n    })();","map":{"mappings":[{"source":"src\\btn.vue","name":null,"original":{"line":11,"column":0},"generated":{"line":7,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":12,"column":0},"generated":{"line":11,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":13,"column":0},"generated":{"line":27,"column":18}},{"source":"src\\btn.vue","name":null,"original":{"line":14,"column":0},"generated":{"line":28,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":14,"column":0},"generated":{"line":28,"column":10}},{"source":"src\\btn.vue","name":null,"original":{"line":13,"column":0},"generated":{"line":28,"column":15}},{"source":"src\\btn.vue","name":null,"original":{"line":15,"column":0},"generated":{"line":29,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":15,"column":0},"generated":{"line":29,"column":16}},{"source":"src\\btn.vue","name":null,"original":{"line":16,"column":0},"generated":{"line":30,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":15,"column":0},"generated":{"line":30,"column":28}},{"source":"src\\btn.vue","name":null,"original":{"line":17,"column":0},"generated":{"line":31,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":15,"column":0},"generated":{"line":32,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":13,"column":0},"generated":{"line":32,"column":5}},{"source":"src\\btn.vue","name":null,"original":{"line":19,"column":0},"generated":{"line":33,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":19,"column":0},"generated":{"line":33,"column":11}},{"source":"src\\btn.vue","name":null,"original":{"line":20,"column":0},"generated":{"line":34,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":20,"column":0},"generated":{"line":34,"column":14}},{"source":"src\\btn.vue","name":null,"original":{"line":19,"column":0},"generated":{"line":34,"column":20}},{"source":"src\\btn.vue","name":null,"original":{"line":21,"column":0},"generated":{"line":35,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":21,"column":0},"generated":{"line":35,"column":17}},{"source":"src\\btn.vue","name":null,"original":{"line":19,"column":0},"generated":{"line":35,"column":23}},{"source":"src\\btn.vue","name":null,"original":{"line":22,"column":0},"generated":{"line":36,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":22,"column":0},"generated":{"line":36,"column":15}},{"source":"src\\btn.vue","name":null,"original":{"line":23,"column":0},"generated":{"line":37,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":23,"column":0},"generated":{"line":37,"column":18}},{"source":"src\\btn.vue","name":null,"original":{"line":22,"column":0},"generated":{"line":37,"column":24}},{"source":"src\\btn.vue","name":null,"original":{"line":24,"column":0},"generated":{"line":38,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":24,"column":0},"generated":{"line":38,"column":21}},{"source":"src\\btn.vue","name":null,"original":{"line":22,"column":0},"generated":{"line":38,"column":23}},{"source":"src\\btn.vue","name":null,"original":{"line":24,"column":0},"generated":{"line":38,"column":24}},{"source":"src\\btn.vue","name":null,"original":{"line":22,"column":0},"generated":{"line":39,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":19,"column":0},"generated":{"line":39,"column":9}},{"source":"src\\btn.vue","name":null,"original":{"line":26,"column":0},"generated":{"line":40,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":26,"column":0},"generated":{"line":40,"column":18}},{"source":"src\\btn.vue","name":null,"original":{"line":19,"column":0},"generated":{"line":40,"column":24}},{"source":"src\\btn.vue","name":null,"original":{"line":26,"column":0},"generated":{"line":40,"column":26}},{"source":"src\\btn.vue","name":null,"original":{"line":27,"column":0},"generated":{"line":41,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":27,"column":0},"generated":{"line":41,"column":15}},{"source":"src\\btn.vue","name":null,"original":{"line":19,"column":0},"generated":{"line":41,"column":21}},{"source":"src\\btn.vue","name":null,"original":{"line":27,"column":0},"generated":{"line":41,"column":23}},{"source":"src\\btn.vue","name":null,"original":{"line":28,"column":0},"generated":{"line":42,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":28,"column":0},"generated":{"line":42,"column":14}},{"source":"src\\btn.vue","name":null,"original":{"line":19,"column":0},"generated":{"line":42,"column":19}},{"source":"src\\btn.vue","name":null,"original":{"line":29,"column":0},"generated":{"line":43,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":29,"column":0},"generated":{"line":43,"column":15}},{"source":"src\\btn.vue","name":null,"original":{"line":29,"column":0},"generated":{"line":43,"column":20}},{"source":"src\\btn.vue","name":null,"original":{"line":19,"column":0},"generated":{"line":44,"column":0}},{"source":"src\\btn.vue","name":null,"original":{"line":13,"column":0},"generated":{"line":45,"column":0}}],"sources":{"src\\btn.vue":"<template>\r\n<button class=\"btn\" v-bind:class=\"[color?'btn-'+color:'', outlined!==void 0?'btn-outlined':'', block!==void 0?'btn-block':'', classes?classes:'']\">\r\n    <icon v-if=\"icon\" :icon=\"icon\"></icon>\r\n    <slot>{{text}}</slot>\r\n    <slot name=\"content\"></slot>\r\n    <badge v-if=\"badge!==void 0\" :inverted=\"outlined!==void 0\" :color=\"color\">{{badge}}</badge>\r\n</button>\r\n</template>\r\n\r\n<script>\r\nimport badge from './badge.vue'\r\nimport icon from './icon.vue'\r\nexport default {\r\n    name: 'btn',\r\n    components: {\r\n        icon,\r\n        badge\r\n    },\r\n    props: {\r\n        text: String,\r\n        classes: String,\r\n        color: {\r\n            type: String,\r\n            default: '' //primary, positive, negative, link\r\n        },\r\n        outlined: String, //undefined| or not\r\n        block: String, //undefined| or not\r\n        icon: false,\r\n        badge: void 0\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './scss/variables';\r\n@import './scss/mixins';\r\n.btn {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 6px 8px 7px;\r\n  margin-bottom: 0; // For input.btn\r\n  font-size: $button-font-size;\r\n  font-weight: $font-weight-light;\r\n  line-height: 1;\r\n  color: #333;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  vertical-align: top;\r\n  cursor: pointer;\r\n  background-color: $chrome-color;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px; // Active & filled button styles\r\n  &:active,\r\n  &.active {\r\n    color: inherit; // Overriding the global style for all anchors.\r\n    background-color: #ccc;\r\n  } // Disabled styles & filled button active styles\r\n  &:disabled,\r\n  &.disabled {\r\n    opacity: 0.6;\r\n  }\r\n} // Other button types\r\n// --------------------------------------------------\r\n// Primary button (Default color is blue)\r\n.btn-primary {\r\n  color: #fff;\r\n  background-color: $primary-color;\r\n  border: 1px solid $primary-color;\r\n  &:active,\r\n  &.active {\r\n    color: #fff;\r\n    background-color: darken($primary-color, 10%);\r\n    border: 1px solid darken($primary-color, 10%);\r\n  }\r\n} // Positive button (Default color is green)\r\n.btn-positive {\r\n  color: #fff;\r\n  background-color: $positive-color;\r\n  border: 1px solid $positive-color;\r\n  &:active,\r\n  &.active {\r\n    color: #fff;\r\n    background-color: darken($positive-color, 10%);\r\n    border: 1px solid darken($positive-color, 10%);\r\n  }\r\n} // Negative button (Default color is red)\r\n.btn-negative {\r\n  color: #fff;\r\n  background-color: $negative-color;\r\n  border: 1px solid $negative-color;\r\n  &:active,\r\n  &.active {\r\n    color: #fff;\r\n    background-color: darken($negative-color, 10%);\r\n    border: 1px solid darken($negative-color, 10%);\r\n  }\r\n} // Outlined buttons\r\n.btn-outlined {\r\n  background-color: transparent;\r\n  &.btn-primary {\r\n    color: $primary-color;\r\n  }\r\n  &.btn-positive {\r\n    color: $positive-color;\r\n  }\r\n  &.btn-negative {\r\n    color: $negative-color;\r\n  } // Active states\r\n  &.btn-primary:active,\r\n  &.btn-positive:active,\r\n  &.btn-negative:active {\r\n    color: #fff;\r\n  }\r\n} // Link button (Buttons that look like links)\r\n.btn-link {\r\n  padding-top: 6px;\r\n  padding-bottom: 6px;\r\n  color: $primary-color;\r\n  background-color: transparent;\r\n  border: 0;\r\n  &:active,\r\n  &.active {\r\n    color: darken($primary-color, 10%);\r\n    background-color: transparent;\r\n  }\r\n} // Block level buttons (full width buttons)\r\n.btn-block {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 15px 0;\r\n  margin-bottom: 10px;\r\n  font-size: 18px;\r\n} // Button overrides\r\n// --------------------------------------------------\r\ninput[type='submit'],\r\ninput[type='reset'],\r\ninput[type='button'] {\r\n  width: 100%;\r\n} // Buttons with badges\r\n// --------------------------------------------------\r\n// Generic styles for all badges within default buttons\r\n.btn .badge {\r\n  margin: -2px -4px -2px 4px;\r\n  font-size: 12px;\r\n  background-color: rgba(0, 0, 0, 0.15);\r\n} // Buttons with inverted badges\r\n.btn .badge-inverted,\r\n.btn:active .badge-inverted {\r\n  background-color: transparent;\r\n}\r\n\r\n.btn-primary:active .badge-inverted,\r\n.btn-positive:active .badge-inverted,\r\n.btn-negative:active .badge-inverted {\r\n  color: #fff;\r\n} // Position badges within block level buttons\r\n// Note: These are absolutely positioned so that text of button isn't \"pushed\" by badge and always\r\n// stays at the center of button\r\n.btn-block .badge {\r\n  position: absolute;\r\n  right: 0;\r\n  margin-right: 10px;\r\n} // Buttons with Ratchicons\r\n// --------------------------------------------------\r\n.btn .icon {\r\n  font-size: inherit;\r\n}\r\n</style>\r\n"},"lineCount":null},"css":"/*\r\n\r\n$font-family-sans-serif: \"Segoe UI\", \"Lucida Grande\", Helvetica, Arial, \"Microsoft YaHei\", FreeSans, Arimo, \"Droid Sans\",\"wenquanyi micro hei\",\"Hiragino Sans GB\", \"Hiragino Sans GB W3\", sans-serif;\r\n$font-family-serif: Georgia, \"Times New Roman\", Times, SimSun, serif;\r\n$font-family-monospace: Monaco, Menlo, Consolas, \"Courier New\", \"FontAwesome\", monospace;\r\n$font-family-kai: Georgia, \"Times New Roman\", Times, Kai, \"Kaiti SC\", KaiTi, BiauKai, serif;\r\n\r\n html, body{\r\n  min-width: 320px;\r\n  font-size: 12px;\r\n}\r\nhtml,\r\nbutton,\r\ninput,\r\nselect,\r\ntextarea{\r\n  font-family: $font-family-sans-serif;\r\n}\r\n\r\n@mixin html {\r\n  font-size: $baseFontSize/($baseWidth/$currentminWidth);\r\n  // max-width: $currentWidth !important;\r\n}\r\n\r\n//attention comments can't be chinese charset? sass compile will be wrong\r\n//mobile width range 320px->100%\r\n$queryWidthList: (320px, 400px), (400px, 500px), (500px, 600px), (600px, 720px);\r\n@each $minWidth, $maxWidth in $queryWidthList {\r\n  @if $maxWidth == 720px {\r\n    @include min-screen($minWidth) {\r\n      $currentWidth: 100%!global;\r\n      $currentminWidth: 720px!global;\r\n      html {\r\n        @include html\r\n      }\r\n    }\r\n  }\r\n  @else {\r\n    @include screen($minWidth, $maxWidth) {\r\n      $currentWidth: $maxWidth!global;\r\n      $currentminWidth: $minWidth!global;\r\n      html {\r\n        @include html\r\n      }\r\n    }\r\n  }\r\n}\r\n */\n.btn {\n  position: relative;\n  display: inline-block;\n  padding: 6px 8px 7px;\n  margin-bottom: 0;\n  font-size: 0.5rem;\n  font-weight: 400;\n  line-height: 1;\n  color: #333;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: top;\n  cursor: pointer;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 3px; }\n  .btn:active, .btn.active {\n    color: inherit;\n    background-color: #ccc; }\n  .btn:disabled, .btn.disabled {\n    opacity: 0.6; }\n\n.btn-primary {\n  color: #fff;\n  background-color: #428bca;\n  border: 1px solid #428bca; }\n  .btn-primary:active, .btn-primary.active {\n    color: #fff;\n    background-color: #3071a9;\n    border: 1px solid #3071a9; }\n\n.btn-positive {\n  color: #fff;\n  background-color: #5cb85c;\n  border: 1px solid #5cb85c; }\n  .btn-positive:active, .btn-positive.active {\n    color: #fff;\n    background-color: #449d44;\n    border: 1px solid #449d44; }\n\n.btn-negative {\n  color: #fff;\n  background-color: #d9534f;\n  border: 1px solid #d9534f; }\n  .btn-negative:active, .btn-negative.active {\n    color: #fff;\n    background-color: #c9302c;\n    border: 1px solid #c9302c; }\n\n.btn-outlined {\n  background-color: transparent; }\n  .btn-outlined.btn-primary {\n    color: #428bca; }\n  .btn-outlined.btn-positive {\n    color: #5cb85c; }\n  .btn-outlined.btn-negative {\n    color: #d9534f; }\n  .btn-outlined.btn-primary:active, .btn-outlined.btn-positive:active, .btn-outlined.btn-negative:active {\n    color: #fff; }\n\n.btn-link {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  color: #428bca;\n  background-color: transparent;\n  border: 0; }\n  .btn-link:active, .btn-link.active {\n    color: #3071a9;\n    background-color: transparent; }\n\n.btn-block {\n  display: block;\n  width: 100%;\n  padding: 15px 0;\n  margin-bottom: 10px;\n  font-size: 18px; }\n\ninput[type='submit'],\ninput[type='reset'],\ninput[type='button'] {\n  width: 100%; }\n\n.btn .badge {\n  margin: -2px -4px -2px 4px;\n  font-size: 12px;\n  background-color: rgba(0, 0, 0, 0.15); }\n\n.btn .badge-inverted,\n.btn:active .badge-inverted {\n  background-color: transparent; }\n\n.btn-primary:active .badge-inverted,\n.btn-positive:active .badge-inverted,\n.btn-negative:active .badge-inverted {\n  color: #fff; }\n\n.btn-block .badge {\n  position: absolute;\n  right: 0;\n  margin-right: 10px; }\n\n.btn .icon {\n  font-size: inherit; }\n"},"hash":"45cadd7c4a420e82cfe31b179d9ea5cc","cacheData":{"env":{}}}